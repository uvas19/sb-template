spring.application.name=demo-application
spring.profiles.active=local
application.version=1.0.0

#server port
server.port=8080

#zipkin export
spring.zipkin.enabled=false

# h2 database
spring.datasource.url=jdbc:h2:mem:sampledb
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database=h2
spring.jpa.databse-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2

spring.jpa.generate-ddl=true


#kafka
kafka.topic-name=customer-topic
spring.kafka.admin.properties.bootstrap.servers=localhost:9092

#spring kafka producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.acks=all
spring.kafka.producer.properties.retries=3
spring.kafka.producer.properties.retry.backoff.ms=1000

# kafka SSL
#spring.kafka.producer.properties.security.protocol=SSL
#spring.kafka.producer.ssl.endpoint.identification.algorithm=
#spring.kafka.producer.ssl.trust-store-location=
#spring.kafka.producer.ssl.trust-store-password=
#spring.kafka.producer.ssl.key-store-location=
#spring.kafka.producer.ssl.key-store-location=

# spring kafka consumer
#spring.kafka.consumer.allow.auto.create.topics=false
#spring.kafka.consumer.enable.auto.commit=true
#spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=customer-group
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#custom kafka consumer
kafka.consumer.enabled=true
kafka.consumer.bootstrap-servers=localhost:9092
kafka.consumer.group-id=customer-group